<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

        <mvc:annotation-driven>
        </mvc:annotation-driven>

        <context:component-scan base-package="user"> <!--controllers, redirect,
                        springforms, exceptioncontroller, springI18nExample, logger, hibernateLesson-->
        </context:component-scan>

        <bean id="viewResolver"
              class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                <property name="viewClass"
                          value="org.springframework.web.servlet.view.JstlView"></property>
                <property name="prefix">
                        <value>/WEB-INF/</value>
                </property>
                <property name="suffix">
                        <value>.jsp</value>
                </property>

        </bean>

<!--

        <mvc:interceptors>
                <mvc:interceptor>
                        <mvc:mapping path="/notjsp/object"/>
                        <bean class="filter.InterceptorExample"></bean>
                </mvc:interceptor>
        </mvc:interceptors>
-->


        <!--start i18n block-->
    <!--    <bean id="messageSource"
              class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
                <property name="basename" value="classpath:label" />
                <property name="defaultEncoding" value="UTF-8"/>
        </bean>

        <bean id="localeChangeInterceptor"
              class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                <property name="paramName" value="lang" />
        </bean>

        <bean id="localeResolver"
              class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
                <property name="defaultLocale" value="ru"/>
        </bean>

        <bean id="handlerMapping"
              class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
                <property name="interceptors">
                        <ref bean="localeChangeInterceptor" />
                </property>
        </bean>

        <mvc:interceptors>
                <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
                        <property name="paramName" value="lang" />
                </bean>
        </mvc:interceptors>
        &lt;!&ndash;end i18n block&ndash;&gt;-->

        <!--Нужен для получения свойств из файла jdbc.properties-->
        <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
                <property name="location" value="classpath:jdbc.properties"/>
        </bean>

       <!-- <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
        </bean>-->

        <!-- Определение источника данных - мост между СУБД и Hibernate.-->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
                <property name="url" value="jdbc:mysql://localhost:3306/user?serverTimezone=UTC"/>
                <property name="username" value="root"/>
                <property name="password" value="root"/>

        </bean>


        <!-- Фабрика, которая будет строить Hibernate-сессии -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
                <!-- бины снизу как бы ссылаются на конфигурационный файл hibernate-cfg, настройки которого описаны в dataSource
                поэтому у нас hibernate.cfg.xml не используется   -->
                <property name="dataSource" ref="dataSource"/>
                <property name="packagesToScan" value="user.entity"/>

                <property name="hibernateProperties">
                        <props>
                            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                                <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                        </props>
                </property>
        </bean>


        <!-- СЛЕДУЮЩАЯ секция для того, чтобы работал механизм транзакций с использованием @Transactional  -->
        <!--  tx:annotation-driven включает механизм управления транзакциями через аннотации -->
        <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
        <!-- Менеджер транзакций-->
        <bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
                <property name="sessionFactory" ref="sessionFactory"/>

<!--

                &lt;!&ndash;Нужен для получения свойств из файла jdbc.properties&ndash;&gt;
                <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
                        <property name="location" value="classpath:jdbc.properties"/>
                </bean>

                <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
                </bean>

                &lt;!&ndash; Определение источника данных - мост между СУБД и Hibernate.&ndash;&gt;
                <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                        <property name="driverClassName" value="${jdbc.driverClassName}"/>
                        <property name="url" value="${jdbc.url}"/>
                        <property name="username" value="${jdbc.username}"/>
                        <property name="password" value="${jdbc.password}"/>

                </bean>

                &lt;!&ndash; Фабрика, которая будет строить Hibernate-сессии &ndash;&gt;
                <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
                        &lt;!&ndash; бины снизу как бы ссылаются на конфигурационный файл hibernate-cfg, настройки которого описаны в dataSource
                        поэтому у нас hibernate.cfg.xml не используется   &ndash;&gt;
                        <property name="dataSource" ref="dataSource"/>
                        <property name="packagesToScan" value="by.redlaw.entity"/>

                        <property name="hibernateProperties">
                                <props>
                                        &lt;!&ndash;     <prop key="hibernate.show_sql">true</prop>&ndash;&gt;
                                        <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                                </props>
                        </property>
                </bean>
-->

        </bean>
</beans>
